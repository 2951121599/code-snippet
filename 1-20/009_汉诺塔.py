# -*-coding:utf-8-*- 
# 作者：   29511
# 文件名:  009_汉诺塔.py
# 日期时间：2022/3/7，15:35
"""
算法：当只有一个盘子的时候，只需要从将A塔上的一个盘子移到C塔上。
     当A塔上有两个盘子是，先将A塔上的1号盘子（编号从上到下）移动到B塔上，再将A塔上的2号盘子移动的C塔上，最后将B塔上的小盘子移动到C塔上。
     当A塔上有3个盘子时，先将A塔上编号1至2的盘子（共2个）移动到B塔上（需借助C塔），然后将A塔上的3号最大的盘子移动到C塔，最后将B塔上的两个盘子借助A塔移动到C塔上。
     当A塔上有n个盘子是，先将A塔上编号1至n-1的盘子（共n-1个）移动到B塔上（借助C塔），然后将A塔上最大的n号盘子移动到C塔上，最后将B塔上的n-1个盘子借助A塔移动到C塔上。
     综上所述，除了只有一个盘子时不需要借助其他塔外，其余情况均一样（只是事件的复杂程度不一样）。
"""


def hanoi(n, x, y, z):
    if n == 1:
        print(x, '-->', z)
    else:
        # 将n-1个盘子从x移到y借助z
        hanoi(n - 1, x, z, y)  # 将n-1个盘子从x移到y
        print(x, '-->', z)  # 将最后一个盘子从x移到z上
        # 将n-1个盘子从y移到z借助x
        hanoi(n - 1, y, x, z)  # 将y上n-1个盘子移到z上


num = int(input("请输入层数："))
hanoi(num, 'A', 'B', 'C')
